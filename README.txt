Where to Start
==============
To get a feel for things, I'd check out simplecrunch.py first. Ignore the procedures that define the @save and @tmpsave wrappers. These are not required for things to work and you could delete all code related to them and have the script work.

crunch.py is a bit more complex that simplecrunch.py, and generates demographic data.
the @save and @tmpsave wrappers are somewhat convoluted, and do not behave perfectly, so you may have to blow away pickled results inthe results/ directory.

Requirements
============
To calculate stats, you should be using python3.
Because some Cast Vote Records (CVRs) exceed github's size limit they are hosted here:
(email czawora@fairvote.org)

Do when you download this repo, you must also download Ballot_Images from the above url and place it in the repo.


Invocation
==========

To calculate selected stats on selected elections do:
python3 crunch.py

file and folder descriptions
============================

__init__.py
-----------
Possibly needless empty file. I added this to make importing modules in some contexts easier. I don't know if its necessary any longer.

__pycache__/
------------
Automatically managed by python runtime, ignore.

Ballot_Images/
--------------
The CVRs for many US jurisdictions. Note that you have to get this from the google drive url above, and place it in the repo once you download it from github.

blk2mprec/
----------
The files in this folder list what percentage of a given census block is in a precinct. 
Since precincts tend to be bigger than census blocks, most of these numbers are 1 or close to it.
When they are not, the block is located over an intersection of precincts. These files are specific to a county and election.
Files with a '001' are from Alameda County. Files with a '075' are from San Francisco County.
Files with a 'p' are from primary elections. Files with 'g' are from general elections. The number following the g or p represents the election year.

These files were downloaded from here, and links of a similar format:
https://statewidedatabase.org/d10/g18_geo_conv.html

Note that these files are no longer used by the cruncher, as better results were found using precinct_block_maps/ described below.

crunch.py
---------
This file contains functions for calculating stats on individual contests.

Some of these stats depend on other stats to be calculated beforehand.
Because of this, each 'stat' functions takes a single argument, a python
dictionary, referred to as a 'ctx', which contains all information computed
about a contest. When a stat function is called, the @save and @tmpsave wrappers
first check to see if the stat has been already calculated. @save writes results
to a .pickle file so that computations can be saved between sessions.

CVAPBLOCK/
----------
This contains block level ACS estimates. Downloaded from here, and similarly formated urls:
https://statewidedatabase.org/d10/2017_cvap.html

headline.csv
------------
These are statistics generated by simplecrunch.py. Each row represents an election, and each column a fact about the election.

manifest.py
-----------
This file contains election data for crunch.py. They contain the path of 
the raw ballot data, rules about the election (whether to truncate the ballot
at the first overvote, or consecutive undervote). Defaults to the rules, and
other starter stats are defined as functions in crunch.py

parsers.py
----------
This file contains functions for generating a list of ballots (each itself
represented as a list). There are functions in this file for generating
ballots from many different juristictions, Santa Fe, Cambridge, San Francisco,
etc., etc.

precinct_block_maps/
--------------------
These are also from https://statewidedatabase.org/, for more info on these files see the README here:
precinct_block_maps/06/001/README.txt 

results/
--------
These are pickled results produced by crunch.py and simplecrunch.py.

results.csv
-----------
These are statistics generated by simplecrunch.py. Each row represents an election, and each column a fact about the election.

simplecrunch.py
---------------
This file contains functions for calculating stats on individual contests.
This file is very similar to crunch.py, except if calculates far fewer statistics, and doesn't calculate any demographic statistics.

SOV/
----
This folder contains Statement of Vote data gathered from here:

TODO
====
- Further generalize to incorporate other sources besides ballot images
- Allow user to search for stats/elections to use
- More flexibility in save decorator
    - add ability to handle partials
    - add ability to invalidate cache based on custom function
        (turn save into a function that returns a decorator)
- Make it easier to create excerpts that do one particular thing

